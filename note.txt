npm init: init package.json
npm view <package_name>: view all versions of package
npm install: install all libraries at package.json
npm install <package_name> --save: install library and save to dependencies at package.json
npm install <package_name>@<version> --save: install library with verson and save to dependencies at package.json
npm uninstall <package_name>: uninstall jquery
npm outdated: libraries has version is not lastest., and show current version of them
npm update --save: update all libraries to lastest version.
--save: suffix of command to save at dependencies
npm ls: show package at node_modules folder

// require module
var fs = require('fs'); // file module
var events = require('events'); // event module
var http = require('http'); // http module
var domain = require('domain'); // domain module
var domain = require('domain').create(); //. create domain

// call module function
path = "files/test.txt";
var data = fs.readFile(path, function(err, data) {
    if (!err) {
        console.log(data.toString);
    } 
});

// call function same variable: script.js


//event
emmiter.on("addUser", function(user, pass) {}); // listent chanel multi times
emmiter.once("addUser", function(user, pass) {}); // listent chanel once time
emmiter.listenerCount("addUser"); // count emmit in channel "addUser"
emmiter.removeListener("addUser", <function of listener>); // remove channel "addUser"


// Handle error
process.on('uncaughtException', function() {

    //handle
    console.log('error');
});

// => handle error alway call after function

// Global file name
__filename // url file

// Global directory
__dirname

// Current Working in Directory
process.cwd();

// Set process working in directory
process.chdir('/usr/'); // if parameter is '/' : directory is partition, 
process.cwd(); // show working

// sep path of operation
path = require('path');
path.sep // windown is '\', MacOS is '/';

// using path to get extension of file or base name
path = require('path');
path.extname(<url>);
path.basename(<url>);


// file stream ('fs')
var fs = require('fs');
// file exist
fs.exist('filename', function(exists) {
   console.log(exists); // exists is true or false
});

//read File
fs.readFile('filepath', 'endcode-utf8', function(error, data) {
    if (error) {
        console.error(error.message);
    } else {
        console.log(data);
    }
});

// write file, replace file if file exists
fs.writeFile(path, data, function(errorr) {
    if (error) {
        console.error(error.message);
    } else {
        console.log('Write file success');
    }
})

// Rename or move file location, replace file if exists
fs.rename(oldName, newName, function(error) {
    if (error) {
        console.error(error.message);
    } else {
        console.log('Renmae file success !');
    }
});

// Make directory, not make if directory exists
fs.mkdir(path, function(error) {
    if (error) {
        console.error(error.message);
    } else {
        console.log('Make directory success: ' + path);
    }
})






